<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lxinet.jeesns.dao.picture.IPictureAlbumDao">
  <resultMap id="PictureAlbumRrsult" type="PictureAlbum">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
    <result column="favor_count" jdbcType="INTEGER" property="favorCount" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="juri" jdbcType="INTEGER" property="juri" />
    <result column="cover" jdbcType="VARCHAR" property="cover" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <association property="member" column="member_id" javaType="Member">
      <result column="member_id" property="id"/>
      <result column="member_name" property="name"/>
      <result column="member_avatar" property="avatar"/>
      <result column="member_follows" property="follows"/>
      <result column="member_fans" property="fans"/>
      <result column="member_introduce" property="introduce"/>
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    a.id, a.create_time, a.update_time, a.member_id, a.comment_count, a.favor_count, a.name, a.description,
    a.juri, a.cover, a.type, b.name as member_name, b.avatar as member_avatar, b.follows as member_follows,
    b.fans as member_fans,b.introduce as member_introduce
  </sql>
  <select id="listByPage" parameterType="java.lang.Integer" resultMap="PictureAlbumRrsult">
    select
    <include refid="Base_Column_List"/>
    from tbl_picture_album AS a LEFT JOIN tbl_member AS b ON a.member_id = b.id
    ORDER BY a.id DESC
  </select>
  <select id="listByMember" parameterType="java.lang.Integer" resultMap="PictureAlbumRrsult">
    select
    <include refid="Base_Column_List"/>
    from tbl_picture_album AS a LEFT JOIN tbl_member AS b ON a.member_id = b.id
    where a.member_id = #{memberId}
    ORDER BY a.id DESC
  </select>
  <select id="findById" parameterType="java.lang.Integer" resultMap="PictureAlbumRrsult">
    select <include refid="Base_Column_List"/>
    from tbl_picture_album AS a LEFT JOIN tbl_member AS b ON a.member_id = b.id
    where a.id = #{id}
  </select>
  <select id="findWeiboAlbum" parameterType="java.lang.Integer" resultMap="PictureAlbumRrsult">
    select <include refid="Base_Column_List"/> from tbl_picture_album AS a LEFT JOIN tbl_member AS b ON
    a.member_id = b.id WHERE member_id = #{memberId} AND type = 2 limit 0,1
  </select>
  <delete id="delete">
    delete from tbl_picture_album WHERE id = #{id} AND default_album = 0
  </delete>
  <insert id="save" parameterType="PictureAlbum" useGeneratedKeys="true" keyProperty="id">
    insert into tbl_picture_album (create_time, update_time, member_id, name, description, juri, cover, type)
    values (now(), now(), #{memberId}, #{name}, #{description}, #{juri}, #{cover}, #{type})
  </insert>
  <update id="update" parameterType="PictureAlbum">
    update tbl_picture_album
    set update_time = now(),name = #{name},description = #{description},cover = #{cover},juri = #{juri}
    where id = #{id}
  </update>
</mapper>